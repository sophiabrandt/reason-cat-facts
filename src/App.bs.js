// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var CatFactData$ReactHooksTemplate = require("./CatFactData.bs.js");
var CatFactItem$ReactHooksTemplate = require("./CatFactItem.bs.js");

function App(Props) {
  var match = React.useState((function () {
          return undefined;
        }));
  var setCatFactData = match[1];
  var catFactData = match[0];
  React.useEffect((function () {
          CatFactData$ReactHooksTemplate.fetchCatFacts(/* () */0).then((function (catFactData) {
                    Curry._1(setCatFactData, (function (_prev) {
                            return catFactData;
                          }));
                    return Promise.resolve(/* () */0);
                  })).catch((function (err) {
                  console.log("An error occurred: " + String(err));
                  return Promise.resolve(/* () */0);
                }));
          return undefined;
        }), ([]));
  var catFactItems = catFactData !== undefined ? $$Array.map((function (catFact) {
            return React.createElement(CatFactItem$ReactHooksTemplate.make, {
                        catFact: catFact,
                        key: catFact[/* id */0]
                      });
          }), catFactData) : "Loading ...";
  return React.createElement(React.Fragment, undefined, React.createElement("h1", {
                  className: "text-center"
                }, "Cat Facts"), React.createElement("div", {
                  className: "center"
                }, React.createElement("div", {
                      style: {
                        maxWidth: "800px"
                      }
                    }, catFactItems)));
}

var make = App;

exports.make = make;
/* react Not a pure module */
